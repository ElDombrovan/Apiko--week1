p {
  font-size: 14px; }
  @media only screen and (min-width: 320px) {
    p {
      font-size: calc(14px + 2 * ((100vw - 320px) / 880)); } }
  @media only screen and (min-width: 1200px) {
    p {
      font-size: 16px; } }

label {
  font-size: 16px; }
  @media only screen and (min-width: 320px) {
    label {
      font-size: calc(16px + 2 * ((100vw - 320px) / 880)); } }
  @media only screen and (min-width: 1200px) {
    label {
      font-size: 18px; } }

ul {
  margin: 0;
  padding: 0; }

button {
  cursor: pointer;
  padding: 10px 20px; }

.App {
  background-color: #ffffff;
  display: block;
  margin: 0 auto; }
  @media only screen and (min-width: 320px) {
    .App {
      width: 100%; } }
  @media only screen and (min-width: 768px) {
    .App {
      width: 50%; } }
  @media only screen and (min-width: 992px) {
    .App {
      width: 30%; } }

.PostList {
  padding: 10px;
  color: #1C1C31; }

.PostListItem {
  list-style: none;
  margin: 10px;
  padding: 10px; }
  .PostListItem:hover {
    color: #2f2f51; }
  .PostListItem__checkbox, .PostListItem__checkbox + label {
    cursor: pointer; }
    .PostListItem__checkbox:hover, .PostListItem__checkbox + label:hover {
      font-weight: 600; }
  .PostListItem__checkbox:checked ~ * {
    color: #b0d7ac;
    text-decoration: line-through; }
  .PostListItem__body {
    text-align: justify; }

.MoreButton {
  display: block;
  font-weight: bold;
  color: #ffffff;
  background-color: #5FAD56;
  border-radius: 5px;
  border: none;
  margin: 20px auto; }
  .MoreButton:hover {
    color: #5FAD56;
    background-color: #b0d7ac;
    border: 2px solid #5FAD56; }

body {
  background-color: #f4f4f4; }


/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc3R5bGVzL2Jhc2Uuc2NzcyIsIndlYnBhY2s6Ly8vLi9zcmMvc3R5bGVzL21peGlucy5zY3NzIiwid2VicGFjazovLy8uL3NyYy9zdHlsZXMvdmFyaWFibGVzLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vc3JjL3N0eWxlcy9sYXlvdXQuc2NzcyIsIndlYnBhY2s6Ly8vLi9zcmMvc3R5bGVzL2NvbXBvbmVudHMvQXBwLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vc3JjL3N0eWxlcy9jb21wb25lbnRzL1Bvc3RMaXN0LnNjc3MiLCJ3ZWJwYWNrOi8vLy4vc3JjL3N0eWxlcy9jb21wb25lbnRzL1Bvc3RMaXN0SXRlbS5zY3NzIiwid2VicGFjazovLy8uL3NyYy9zdHlsZXMvY29tcG9uZW50cy9Nb3JlQnV0dG9uLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vc3JjL3N0eWxlcy9tYWluLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBR0E7RUNVUSxlQ0hZO0VESVo7SURYUjtNQ1lVLG1EQUErSSxJQUtsSjtFQUhDO0lEZFI7TUNlVSxlRGR1RixJQ2dCMUY7O0FEYlA7RUNNUSxlREx5RTtFQ016RTtJRFBSO01DUVUsbURBQStJLElBS2xKO0VBSEM7SURWUjtNQ1dVLGVEVjZGLElDWWhHOztBRWpCUDtFQUNJLFNBQVM7RUFDVCxVQUFVOztBQUdaO0VBQ0UsZUFBZTtFQUNmLGtCQUEwQjs7QUNSOUI7RUFDSSx5QkZEVztFRUVYLGNBQWM7RUFDZCxjQUFjO0VId0JaO0lHM0JOO01BS3dDLFdBQVcsSUFHbEQ7RUhtQks7SUczQk47TUFNbUMsVUFBVSxJQUU1QztFSG1CSztJRzNCTjtNQU9rQyxVQUFVLElBQzNDOztBQ1JEO0VBQ0ksYUhLUztFR0pULGNIRGU7O0FJRG5CO0VBR0ksZ0JBQWdCO0VBQ2hCLFlKRVM7RUlEVCxhSkNTO0VJTmI7SUFRUSxjSkxnRDtFSVFuRDtJQUVPLGVBQWU7SUFGdEI7TUFHZ0IsZ0JBQWdCO0VBSGhDO0lBT1csY0pkNEM7SUllNUMsNkJBQTZCO0VBS3pDO0lBQ0ksbUJBQW1COztBQ3pCM0I7RUFDSSxjQUFjO0VBQ2QsaUJBQWlCO0VBQ2pCLGNMSFc7RUtJWCx5QkxGaUI7RUtHakIsa0JBQXdCO0VBQ3hCLFlBQVk7RUFDWixpQkFBc0I7RUFQMUI7SUFVUSxjTFJhO0lLU2IseUJMUG9EO0lLUXBELHlCTFZhOztBTURyQjtFQUNJLHlCQUF3QiIsImZpbGUiOiJzdHlsZS5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvLyB0eXBvZ3JhcGh5IHJ1bGVzIGV0Yy5cbkBpbXBvcnQgJy4vdmFyaWFibGVzLnNjc3MnLCAnLi9taXhpbnMuc2Nzcyc7XG5cbnAge1xuICAgIEBpbmNsdWRlIGZsdWlkLXR5cGUoJHNjcmVlbl93aWR0aC1taW4sJHNjcmVlbl93aWR0aC1tYXgsICRmb250X3NpemUtbWluLCAkZm9udF9zaXplLW1heCAtIDRweCk7XG59XG5cbmxhYmVsIHtcbiAgICBAaW5jbHVkZSBmbHVpZC10eXBlKCRzY3JlZW5fd2lkdGgtbWluLCRzY3JlZW5fd2lkdGgtbWF4LCAkZm9udF9zaXplLW1pbiArIDJweCwgJGZvbnRfc2l6ZS1tYXggLSAycHgpO1xufSIsIi8vbWl4aW5zICYgZnVuY3Rpb25zXG5AZnVuY3Rpb24gc3RyaXAtdW5pdCgkdmFsdWUpIHtcbiAgICBAcmV0dXJuICR2YWx1ZSAvICgkdmFsdWUgKiAwICsgMSk7XG4gIH1cblxuICBAbWl4aW4gZmx1aWQtdHlwZSgkbWluLXZ3LCAkbWF4LXZ3LCAkbWluLWZvbnQtc2l6ZSwgJG1heC1mb250LXNpemUpIHtcbiAgICAkdTE6IHVuaXQoJG1pbi12dyk7XG4gICAgJHUyOiB1bml0KCRtYXgtdncpO1xuICAgICR1MzogdW5pdCgkbWluLWZvbnQtc2l6ZSk7XG4gICAgJHU0OiB1bml0KCRtYXgtZm9udC1zaXplKTtcbiAgXG4gICAgQGlmICR1MSA9PSAkdTIgYW5kICR1MSA9PSAkdTMgYW5kICR1MSA9PSAkdTQge1xuICAgICAgJiB7XG4gICAgICAgIGZvbnQtc2l6ZTogJG1pbi1mb250LXNpemU7XG4gICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogJG1pbi12dykge1xuICAgICAgICAgIGZvbnQtc2l6ZTogY2FsYygjeyRtaW4tZm9udC1zaXplfSArICN7c3RyaXAtdW5pdCgkbWF4LWZvbnQtc2l6ZSAtICRtaW4tZm9udC1zaXplKX0gKiAoKDEwMHZ3IC0gI3skbWluLXZ3fSkgLyAje3N0cmlwLXVuaXQoJG1heC12dyAtICRtaW4tdncpfSkpO1xuICAgICAgICB9XG4gICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogJG1heC12dykge1xuICAgICAgICAgIGZvbnQtc2l6ZTogJG1heC1mb250LXNpemU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAvLyBicmVha3BvaW50c1xuICBAbWl4aW4gc2NyZWVuLWZvcigkYnJlYWtwb2ludCkge1xuICAgIC8vIElmIHRoZSBrZXkgZXhpc3RzIGluIHRoZSBtYXBcbiAgICBAaWYgbWFwLWhhcy1rZXkoJGJyZWFrcG9pbnRzLCAkYnJlYWtwb2ludCkge1xuICAgICAgLy8gUHJpbnRzIGEgbWVkaWEgcXVlcnkgYmFzZWQgb24gdGhlIHZhbHVlXG4gICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IG1hcC1nZXQoJGJyZWFrcG9pbnRzLCAkYnJlYWtwb2ludCkpIHtcbiAgICAgICAgQGNvbnRlbnQ7XG4gICAgICB9XG4gICAgfSBAZWxzZSB7XG4gICAgICAgIEB3YXJuIFwiVW5mb3J0dW5hdGVseSwgbm8gdmFsdWUgY291bGQgYmUgcmV0cmlldmVkIGZyb20gYCN7JGJyZWFrcG9pbnR9YC4gXCJcbiAgICAgICAgICAgICsgXCJBdmFpbGFibGUgYnJlYWtwb2ludHMgYXJlOiAje21hcC1rZXlzKCRicmVha3BvaW50cyl9LlwiO1xuICAgICAgfVxuICAgIH0iLCIvL3ZhcmlhYmxlcy5zY3NzXG5cbiR3aGl0ZTogI2ZmZmZmZjtcbiRkYXJrX2JsdWU6ICMxQzFDMzE7XG4kbGlnaHRfZ3JlZW46ICM1RkFENTY7XG4kZGFya19ibHVlLTEwOiBsaWdodGVuKCRjb2xvcjogJGRhcmtfYmx1ZSwgJGFtb3VudDogMTAlKTtcbiRsaWdodF9ncmVlbi0yNTogbGlnaHRlbigkY29sb3I6ICRsaWdodF9ncmVlbiwgJGFtb3VudDogMjUlKTtcblxuJGd1dHRlcjogMTBweDtcblxuJGZvbnRfc2l6ZS1taW46IDE0cHg7XG4kZm9udF9zaXplLW1heDogMjBweDtcblxuJHNjcmVlbl93aWR0aC1taW46IDMyMHB4O1xuJHNjcmVlbl93aWR0aC1tYXg6IDEyMDBweDtcblxuJGJyZWFrcG9pbnRzOiAoXG4gICAgJ2V4dHJhLXNtYWxsJzogJHNjcmVlbl93aWR0aC1taW4sXG4gICAgJ3NtYWxsJzogNjAwcHgsXG4gICAgJ21lZGl1bSc6IDc2OHB4LFxuICAgICdsYXJnZSc6IDk5MnB4LFxuICAgICdleHRyYS1sYXJnZSc6ICRzY3JlZW5fd2lkdGgtbWF4LFxuKTsiLCIvLyBuYXYsIGZvcm1zLCBoZWFkZXIgZXRjLlxuXG5AaW1wb3J0ICcuL3ZhcmlhYmxlcy5zY3NzJztcbnVsIHtcbiAgICBtYXJnaW46IDA7XG4gICAgcGFkZGluZzogMDtcbiAgfVxuXG4gIGJ1dHRvbiB7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIHBhZGRpbmc6ICRndXR0ZXIgJGd1dHRlcioyO1xuICB9XG4iLCJAaW1wb3J0ICcuLi92YXJpYWJsZXMuc2NzcycsICcuLi9taXhpbnMuc2Nzcyc7XG5cbi5BcHAge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICR3aGl0ZTtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBtYXJnaW46IDAgYXV0bztcblxuICAgIEBpbmNsdWRlIHNjcmVlbi1mb3IoJ2V4dHJhLXNtYWxsJyl7IHdpZHRoOiAxMDAlO31cbiAgICBAaW5jbHVkZSBzY3JlZW4tZm9yKCdtZWRpdW0nKXsgd2lkdGg6IDUwJTt9XG4gICAgQGluY2x1ZGUgc2NyZWVuLWZvcignbGFyZ2UnKXsgd2lkdGg6IDMwJTt9XG59IiwiQGltcG9ydCAnLi4vdmFyaWFibGVzLnNjc3MnO1xuXG4uUG9zdExpc3Qge1xuICAgIHBhZGRpbmc6ICRndXR0ZXI7XG4gICAgY29sb3I6ICRkYXJrX2JsdWU7XG59IiwiQGltcG9ydCAnLi4vdmFyaWFibGVzLnNjc3MnO1xuXG4uUG9zdExpc3RJdGVtIHtcbiAgICAkcGFyZW50OiAmO1xuXG4gICAgbGlzdC1zdHlsZTogbm9uZTtcbiAgICBtYXJnaW46ICRndXR0ZXI7XG4gICAgcGFkZGluZzogJGd1dHRlcjtcblxuICAgICY6aG92ZXJ7XG4gICAgICAgIGNvbG9yOiRkYXJrX2JsdWUtMTA7XG4gICAgfVxuXG4gICAgJl9fY2hlY2tib3gge1xuICAgICAgICAmLCArIGxhYmVsIHsgXG4gICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICAgICAgICAmOmhvdmVyIHtmb250LXdlaWdodDogNjAwfVxuICAgICAgICB9XG4gICAgICAgICY6Y2hlY2tlZCB7XG4gICAgICAgICAgICB+ICoge1xuICAgICAgICAgICAgICAgIGNvbG9yOiAkbGlnaHRfZ3JlZW4tMjU7XG4gICAgICAgICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBsaW5lLXRocm91Z2g7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAmX19ib2R5IHtcbiAgICAgICAgdGV4dC1hbGlnbjoganVzdGlmeTtcbiAgICB9XG59IiwiQGltcG9ydCAnLi4vdmFyaWFibGVzLnNjc3MnO1xuXG4uTW9yZUJ1dHRvbiB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgY29sb3I6ICR3aGl0ZTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkbGlnaHRfZ3JlZW47XG4gICAgYm9yZGVyLXJhZGl1czogJGd1dHRlci8yO1xuICAgIGJvcmRlcjogbm9uZTtcbiAgICBtYXJnaW46ICRndXR0ZXIqMiBhdXRvO1xuXG4gICAgJjpob3ZlciB7XG4gICAgICAgIGNvbG9yOiAkbGlnaHRfZ3JlZW47XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRsaWdodF9ncmVlbi0yNTtcbiAgICAgICAgYm9yZGVyOiAycHggc29saWQgJGxpZ2h0X2dyZWVuO1xuICAgIH1cbn0iLCJAaW1wb3J0ICcuL2Jhc2Uuc2NzcycsICcuL2xheW91dC5zY3NzJywgJy4vbWl4aW5zLnNjc3MnO1xuQGltcG9ydCAnLi9jb21wb25lbnRzL0FwcC5zY3NzJywgJy4vY29tcG9uZW50cy9Qb3N0TGlzdC5zY3NzJywgJy4vY29tcG9uZW50cy9Qb3N0TGlzdEl0ZW0uc2NzcycsICcuL2NvbXBvbmVudHMvTW9yZUJ1dHRvbi5zY3NzJztcblxuYm9keSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjojZjRmNGY0O1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==*/